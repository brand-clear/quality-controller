version "5.0"
#=====================================================
# This script prompts the user to probe a planar datum 
# feature per given inputs.
#
# Parameters
# ----------
# $1 : Datum label
#     {"A", "B", "C"}
#
# $2 : Datum reference
#     {"A", "B", "C"}
#-----------------------------------------------------


DECLARE name "datum plane $1"
DECLARE measured
DECLARE tolerance
DECLARE formControl
DECLARE runoutControl
DECLARE profileControl
DECLARE tryAgain 1
DECLARE errorStatus
DECLARE macroPath "Q:\Quality Control\quality_controller\macros"


MACRO GUIDING_INSTRUCTIONS ( "On", "Probe ${name}", , , "off")

WHILE $tryAgain == 1
    
    # Probe plane
    FEATURE PRIMITIVE PLANE PROBE ( "Measured", $name )
    
    # Flatness test
    SET measured "Flatness"
    SET tolerance 0.001
    MACRO EXEC ( "${macroPath}\metric-sansdatum.pwmacro", measured, tolerance, formControl )
    IF $measured > $tolerance
        MACRO INPUT QUESTION ( tryAgain, {"The measured flatness exceeds the datum tolerance of ${tolerance}.", "Do you want to try again?"} )
        IF $tryAgain == 1
            MEASURE CONTROL REMOVE ( $formControl )
            CONTINUE
        ENDIF
    ELSE
        SET tryAgain 0
    ENDIF
    
    # Get runout
    SET measured "Total Runout"
    SET tolerance 0.001
    MACRO EXEC ( "${macroPath}\metric-runout.pwmacro", measured, tolerance, runoutControl, $2, "" )
    
    # Get profile
    SET measured "Surface Profile"
    SET tolerance 0.002
    MACRO EXEC ( "${macroPath}\metric-sansdatum.pwmacro", measured, tolerance, profileControl )
    
    # Get X coordinate, assuming part is revolved around X.
    MEASURE CONTROL ADD ( "Dimensional", "Centroid X" )
    MEASURE CONTROL TOLERANCE_ZONE LIMITS ( "Midpoint X", 0.0005, , , -0.0005, )
    
    TREEVIEW OBJECT VIEW RESTORE ( $name )
    # If no plane was probed an error will be raised
    # when trying to restore the feature.
    MACRO GET_ERROR_STATUS ( errorStatus )
    IF $errorStatus == "Error"
        MACRO END ( "Error" )
    ENDIF
    
    MACRO EXEC ( "${macroPath}\capture-snapshot.pwmacro" )
    
ENDWHILE


# Prep for next operation
MACRO EXEC ( "${macroPath}\process-conclude.pwmacro" )