version "5.0"
#=====================================================
# This script provides 3D alignment functionality 
# where the 3rd alignment feature is a hole.
#-----------------------------------------------------


DECLARE errorStatus
DECLARE index
DECLARE nomPoint "alignment point"
DECLARE macroPath "Q:\Quality Control\quality_controller\macros"
#DECLARE macroPath "C:\Users\mcclbra\Desktop\development\quality-controller-master\quality_controller\macros"


MACRO EXEC ( "${macroPath}\alignment-features-2D.pwmacro" )
MACRO GET_ERROR_STATUS ( errorStatus )
IF $errorStatus == "Error"
    MACRO END ( "Error" )
ENDIF


# Define nominal datum components
MACRO EXEC ( "${macroPath}\datum-nominal.pwmacro", "cylinder", "C" )
# Create nominal point from nominal cylinder
TREEVIEW FEATURE COUNT GET ( index )
TREEVIEW FEATURE SELECT ( $index )
FEATURE PRIMITIVE POINT FROM_CYLINDER_MIDPOINTS ( $nomPoint )
MACRO GET_ERROR_STATUS ( errorStatus )
IF $errorStatus == "Error"
    MACRO EXEC ( "${macroPath}\process-reset.pwmacro" )
    MACRO END ( "Error" )
ENDIF


# A measured point component is created alongside  
# the measured cylindrical component.
MACRO EXEC ( "${macroPath}\datum-measured-cylinder.pwmacro", "C" )
MACRO GET_ERROR_STATUS ( errorStatus )
IF $errorStatus == "Error"
    MACRO EXEC ( "${macroPath}\process-reset.pwmacro" )
    MACRO END ( "Error" )
ENDIF


# Align nominal and measured datum components
ALIGN PLANE_AXIS_CENTER_POINT SEQUENCE ( "PAC" )
ALIGN PLANE_AXIS_CENTER_POINT ( "datum plane A -meas-", "datum plane A -nom-", "datum cylinder B -meas-", "datum cylinder B -nom-", "${nomPoint} -meas-", "${nomPoint} -nom-", "qc datum alignment 1" )


# An error is raised if the nominal alignment features 
# do not have a measured counterpart. This is a bit
# redundant.
MACRO GET_ERROR_STATUS ( errorStatus )
IF $errorStatus == "Error"
    MACRO PAUSE ( "AlignmentError", {"This alignment could not be completed with the given parameters.", "Please try again."})
    MACRO EXEC ( "${macroPath}\process-reset.pwmacro" )
    MACRO END ( "Error" )
ENDIF


# Prep for next operation
MACRO EXEC ( "${macroPath}\process-conclude.pwmacro" )

